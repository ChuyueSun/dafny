(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 (T@T T@T) T@U)
(declare-fun $generated@@263 (T@T T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@364 (T@U T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@T) T@U)
(declare-fun $generated@@404 () T@T)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@445 (T@T) T@T)
(declare-fun $generated@@446 (T@T) T@T)
(declare-fun $generated@@457 (T@U) Int)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@145)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@64) (= (type $generated@@254) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@250 $generated@@252) $generated@@253 $generated@@254) ($generated@@74 $generated@@252 $generated@@253 $generated@@254)))
 :pattern ( ($generated@@238 ($generated@@250 $generated@@252) $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@257 T@T) ) (! (= (type ($generated@@256 $generated@@257)) ($generated@@76 $generated@@257 $generated@@2))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@79 (type $generated@@258))))
 (=> (= (type $generated@@258) ($generated@@76 $generated@@259 $generated@@2)) (and (= (= ($generated@@255 $generated@@258) 0) (= $generated@@258 ($generated@@256 $generated@@259))) (=> (not (= ($generated@@255 $generated@@258) 0)) (exists (($generated@@260 T@U) ) (!  (and (= (type $generated@@260) $generated@@259) (< 0 ($generated ($generated@@81 $generated@@258 $generated@@260))))
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
))))))
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert  (and (and (and (and (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@266 $generated@@267)) 17)) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@268 $generated@@269)) $generated@@268)
 :pattern ( ($generated@@263 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@263 $generated@@270 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@263 $generated@@270 $generated@@271))
))) (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@264 (type $generated@@272))))
(= (type ($generated@@261 $generated@@272)) ($generated@@76 $generated@@273 $generated@@4)))
 :pattern ( ($generated@@261 $generated@@272))
))) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= (type ($generated@@262 $generated@@274 $generated@@275)) ($generated@@263 $generated@@274 $generated@@275))
 :pattern ( ($generated@@262 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@T) ) (! (let (($generated@@278 (type $generated@@276)))
 (not ($generated@@0 ($generated@@81 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276))))
 :pattern ( (let (($generated@@278 (type $generated@@276)))
($generated@@81 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276)))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 18)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@76 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@81 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@81 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@79 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@76 $generated@@298 $generated@@2)) (= ($generated@@151 $generated@@297) (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@298) (and (<= 0 ($generated ($generated@@81 $generated@@297 $generated@@299))) (<= ($generated ($generated@@81 $generated@@297 $generated@@299)) ($generated@@255 $generated@@297))))
 :pattern ( ($generated@@81 $generated@@297 $generated@@299))
)))))
 :pattern ( ($generated@@151 $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@265 (type $generated@@300))))
(let (($generated@@302 ($generated@@264 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@263 $generated@@302 $generated@@301)) (or (= $generated@@300 ($generated@@262 $generated@@302 $generated@@301)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) ($generated@@0 ($generated@@81 ($generated@@261 $generated@@300) $generated@@303)))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@261 $generated@@300))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@265 (type $generated@@305))))
(= (type ($generated@@304 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@265 (type $generated@@307))))
(let (($generated@@309 ($generated@@264 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@263 $generated@@309 $generated@@308)) (or (= $generated@@307 ($generated@@262 $generated@@309 $generated@@308)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@308) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@307) $generated@@310)))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@283 (type $generated@@311))))
(let (($generated@@313 ($generated@@282 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@281 $generated@@313 $generated@@312)) (or (= $generated@@311 ($generated@@280 $generated@@313 $generated@@312)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@311) $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@279 $generated@@311))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@283 (type $generated@@316))))
(= (type ($generated@@315 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@283 (type $generated@@318))))
(let (($generated@@320 ($generated@@282 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@281 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@280 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@323) $generated@@64)) (= ($generated@@132 $generated@@322 ($generated@@150 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@322 $generated@@324)))) ($generated@@212 $generated@@324 $generated@@323))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@132 $generated@@322 ($generated@@150 $generated@@323)))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (= (type $generated@@325) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@326) $generated@@64)) (= (type $generated@@327) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@325 ($generated@@221 $generated@@326) $generated@@327) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@145) ($generated@@0 ($generated@@81 $generated@@325 $generated@@328))) ($generated@@238 $generated@@328 $generated@@326 $generated@@327))
 :pattern ( ($generated@@81 $generated@@325 $generated@@328))
))))
 :pattern ( ($generated@@74 $generated@@325 ($generated@@221 $generated@@326) $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (and (= (type $generated@@329) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@330) $generated@@64)) (= (type $generated@@331) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@329 ($generated@@226 $generated@@330) $generated@@331) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) ($generated@@0 ($generated@@81 $generated@@329 $generated@@332))) ($generated@@238 $generated@@332 $generated@@330 $generated@@331))
 :pattern ( ($generated@@81 $generated@@329 $generated@@332))
))))
 :pattern ( ($generated@@74 $generated@@329 ($generated@@226 $generated@@330) $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
(= ($generated ($generated@@81 ($generated@@256 $generated@@334) $generated@@333)) 0))
 :pattern ( (let (($generated@@334 (type $generated@@333)))
($generated@@81 ($generated@@256 $generated@@334) $generated@@333)))
)))
(assert  (and (and (forall (($generated@@338 T@U) ) (! (= (type ($generated@@335 $generated@@338)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@335 $generated@@338))
)) (forall (($generated@@339 T@T) ($generated@@340 T@U) ) (! (= (type ($generated@@336 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@265 (type $generated@@341))))
(let (($generated@@343 ($generated@@264 (type $generated@@341))))
(= (type ($generated@@337 $generated@@341)) ($generated@@76 $generated@@343 $generated@@342))))
 :pattern ( ($generated@@337 $generated@@341))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@263 $generated@@145 $generated@@145)) (= (type $generated@@345) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@344) $generated@@345))  (and ($generated@@0 ($generated@@81 ($generated@@261 $generated@@344) ($generated@@143 ($generated@@336 $generated@@136 $generated@@345)))) (= ($generated@@81 ($generated@@337 $generated@@344) ($generated@@143 ($generated@@336 $generated@@136 $generated@@345))) ($generated@@144 ($generated@@336 $generated@@136 $generated@@345))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@344) $generated@@345))
)))
(assert  (and (forall (($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@348)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@346 $generated@@348))
)) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@283 (type $generated@@349))))
(let (($generated@@351 ($generated@@282 (type $generated@@349))))
(= (type ($generated@@347 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@347 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@281 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@279 $generated@@352) ($generated@@143 ($generated@@336 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@347 $generated@@352) ($generated@@143 ($generated@@336 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@336 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(let (($generated@@357 ($generated@@264 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@263 $generated@@357 $generated@@356)) (= ($generated@@0 ($generated@@81 ($generated@@304 $generated@@354) $generated@@355)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) (and ($generated@@0 ($generated@@81 ($generated@@261 $generated@@354) $generated@@358)) (= $generated@@355 ($generated@@81 ($generated@@337 $generated@@354) $generated@@358))))
 :pattern ( ($generated@@81 ($generated@@261 $generated@@354) $generated@@358))
 :pattern ( ($generated@@81 ($generated@@337 $generated@@354) $generated@@358))
))))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(let (($generated@@362 ($generated@@282 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@281 $generated@@362 $generated@@361)) (= ($generated@@0 ($generated@@81 ($generated@@315 $generated@@359) $generated@@360)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) (and ($generated@@0 ($generated@@81 ($generated@@279 $generated@@359) $generated@@363)) (= $generated@@360 ($generated@@81 ($generated@@347 $generated@@359) $generated@@363))))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@359) $generated@@363))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@359) $generated@@363))
))))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@365 $generated@@366)) $generated@@64)
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (and (= (type $generated@@367) ($generated@@263 $generated@@145 $generated@@145)) (= (type $generated@@368) $generated@@64)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@261 $generated@@367) $generated@@371))) (and ($generated@@238 ($generated@@81 ($generated@@337 $generated@@367) $generated@@371) $generated@@369 $generated@@370) ($generated@@238 $generated@@371 $generated@@368 $generated@@370)))
 :pattern ( ($generated@@81 ($generated@@337 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@261 $generated@@367) $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@281 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@375) $generated@@379))) (and ($generated@@238 ($generated@@81 ($generated@@347 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@238 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@T) ) (! (= (type ($generated@@380 $generated@@381)) ($generated@@76 $generated@@381 $generated@@4))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@283 (type $generated@@382))))
(let (($generated@@384 ($generated@@282 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@281 $generated@@384 $generated@@383)) (= (= $generated@@382 ($generated@@280 $generated@@384 $generated@@383)) (= ($generated@@279 $generated@@382) ($generated@@380 $generated@@384))))))
 :pattern ( ($generated@@279 $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@283 (type $generated@@385))))
(let (($generated@@387 ($generated@@282 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@281 $generated@@387 $generated@@386)) (= (= $generated@@385 ($generated@@280 $generated@@387 $generated@@386)) (= ($generated@@315 $generated@@385) ($generated@@380 $generated@@386))))))
 :pattern ( ($generated@@315 $generated@@385))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@283 (type $generated@@388))))
(let (($generated@@390 ($generated@@282 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@281 $generated@@390 $generated@@389)) (= (= $generated@@388 ($generated@@280 $generated@@390 $generated@@389)) (= ($generated@@346 $generated@@388) ($generated@@380 $generated@@145))))))
 :pattern ( ($generated@@346 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@265 (type $generated@@391))))
(let (($generated@@393 ($generated@@264 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@263 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@262 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (and (and (= (type $generated@@394) $generated@@145) (= (type $generated@@395) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@391) ($generated@@250 ($generated@@211 $generated@@394 $generated@@395)))))
 :no-pattern (type $generated@@394)
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@335 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@283 (type $generated@@396))))
(let (($generated@@398 ($generated@@282 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@281 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@280 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (and (and (= (type $generated@@399) $generated@@145) (= (type $generated@@400) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@396) ($generated@@250 ($generated@@211 $generated@@399 $generated@@400)))))
 :no-pattern (type $generated@@399)
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@346 $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@145) ($generated@@212 $generated@@401 $generated@@46)) (and (= ($generated@@250 ($generated@@336 $generated@@2 $generated@@401)) $generated@@401) ($generated@@132 ($generated@@336 $generated@@2 $generated@@401) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@401 $generated@@46))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@145) ($generated@@212 $generated@@402 $generated@@47)) (and (= ($generated@@250 ($generated@@336 $generated@@3 $generated@@402)) $generated@@402) ($generated@@132 ($generated@@336 $generated@@3 $generated@@402) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@402 $generated@@47))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@145) ($generated@@212 $generated@@403 $generated@@44)) (and (= ($generated@@250 ($generated@@336 $generated@@4 $generated@@403)) $generated@@403) ($generated@@132 ($generated@@336 $generated@@4 $generated@@403) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@403 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@404) 19))
(assert (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@145) ($generated@@212 $generated@@405 $generated@@45)) (and (= ($generated@@250 ($generated@@336 $generated@@404 $generated@@405)) $generated@@405) ($generated@@132 ($generated@@336 $generated@@404 $generated@@405) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@405 $generated@@45))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (= (type $generated@@407) $generated@@64) (= ($generated@@212 ($generated@@250 $generated@@406) $generated@@407) ($generated@@132 $generated@@406 $generated@@407)))
 :pattern ( ($generated@@212 ($generated@@250 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@79 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@76 $generated@@409 $generated@@2)) (<= 0 ($generated@@255 $generated@@408))))
 :pattern ( ($generated@@255 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (= (type ($generated@@410 $generated@@411)) $generated@@64)
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@64) (= (type $generated@@413) $generated@@64)) (= ($generated@@410 ($generated@@364 $generated@@412 $generated@@413)) $generated@@412))
 :pattern ( ($generated@@364 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (= (type ($generated@@414 $generated@@415)) $generated@@64)
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@64) (= (type $generated@@417) $generated@@64)) (= ($generated@@414 ($generated@@364 $generated@@416 $generated@@417)) $generated@@417))
 :pattern ( ($generated@@364 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@64) (= (type $generated@@419) $generated@@64)) (= ($generated@@72 ($generated@@364 $generated@@418 $generated@@419)) $generated@@58))
 :pattern ( ($generated@@364 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@64) (= (type $generated@@423) $generated@@64)) (= ($generated@@420 ($generated@@372 $generated@@422 $generated@@423)) $generated@@422))
 :pattern ( ($generated@@372 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@424 ($generated@@372 $generated@@426 $generated@@427)) $generated@@427))
 :pattern ( ($generated@@372 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@428 $generated@@429)) $generated@@59))
 :pattern ( ($generated@@372 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) (= (type $generated@@431) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@430 $generated@@431)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@135 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@135 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@135 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@135 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) (= (type $generated@@441) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@211 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@145) (= (type $generated@@443) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@211 $generated@@442 $generated@@443))
)))
(assert  (and (and (and (forall (($generated@@447 T@T) ) (= ($generated@@1 ($generated@@445 $generated@@447)) 20)) (forall (($generated@@448 T@T) ) (! (= ($generated@@446 ($generated@@445 $generated@@448)) $generated@@448)
 :pattern ( ($generated@@445 $generated@@448))
))) (forall (($generated@@449 T@U) ) (! (= (type ($generated@@444 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@449))
))) (forall (($generated@@450 T@U) ($generated@@451 Int) ) (! (let (($generated@@452 ($generated@@446 (type $generated@@450))))
(= (type (seq.nth $generated@@450 $generated@@451)) $generated@@452))
 :pattern ( (seq.nth $generated@@450 $generated@@451))
))))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (= (type $generated@@453) ($generated@@445 $generated@@145)) (= (type $generated@@454) $generated@@64)) (= (type $generated@@455) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@453 ($generated@@444 $generated@@454) $generated@@455) (forall (($generated@@456 Int) ) (!  (=> (and (<= 0 $generated@@456) (< $generated@@456 (seq.len $generated@@453))) ($generated@@238 (seq.nth $generated@@453 $generated@@456) $generated@@454 $generated@@455))
 :pattern ( (seq.nth $generated@@453 $generated@@456))
))))
 :pattern ( ($generated@@74 $generated@@453 ($generated@@444 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@458 Int) ) (! (= ($generated@@457 ($generated@@75 $generated@@458)) $generated@@458)
 :pattern ( ($generated@@75 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@64) (= ($generated@@459 ($generated@@221 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@221 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (= (type $generated@@462) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@462)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@64) (= ($generated@@463 ($generated@@226 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@226 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@466)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@64) (= ($generated@@467 ($generated@@150 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@150 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@470)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@471 ($generated@@444 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@444 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@72 ($generated@@444 $generated@@474)) $generated@@57))
 :pattern ( ($generated@@444 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 (type $generated@@475)))
(= ($generated@@336 $generated@@476 ($generated@@250 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@250 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (= (type $generated@@477) ($generated@@263 $generated@@145 $generated@@145)) (= (type $generated@@478) $generated@@64)) (= (type $generated@@479) $generated@@64)) (= ($generated@@132 $generated@@477 ($generated@@364 $generated@@478 $generated@@479)) (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@261 $generated@@477) $generated@@480))) (and ($generated@@212 ($generated@@81 ($generated@@337 $generated@@477) $generated@@480) $generated@@479) ($generated@@212 $generated@@480 $generated@@478)))
 :pattern ( ($generated@@81 ($generated@@337 $generated@@477) $generated@@480))
 :pattern ( ($generated@@81 ($generated@@261 $generated@@477) $generated@@480))
))))
 :pattern ( ($generated@@132 $generated@@477 ($generated@@364 $generated@@478 $generated@@479)))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@281 $generated@@145 $generated@@145)) (= (type $generated@@482) $generated@@64)) (= (type $generated@@483) $generated@@64)) (= ($generated@@132 $generated@@481 ($generated@@372 $generated@@482 $generated@@483)) (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@481) $generated@@484))) (and ($generated@@212 ($generated@@81 ($generated@@347 $generated@@481) $generated@@484) $generated@@483) ($generated@@212 $generated@@484 $generated@@482)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@481) $generated@@484))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@481) $generated@@484))
))))
 :pattern ( ($generated@@132 $generated@@481 ($generated@@372 $generated@@482 $generated@@483)))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) (= (type $generated@@488) $generated@@145)) (< ($generated@@485 $generated@@487) ($generated@@486 ($generated@@211 $generated@@487 $generated@@488))))
 :pattern ( ($generated@@211 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@145) (= (type $generated@@490) $generated@@145)) (< ($generated@@485 $generated@@490) ($generated@@486 ($generated@@211 $generated@@489 $generated@@490))))
 :pattern ( ($generated@@211 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (and (= (type $generated@@491) $generated@@145) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) $generated@@64)) ($generated@@212 $generated@@491 ($generated@@364 $generated@@492 $generated@@493))) (and (= ($generated@@250 ($generated@@336 ($generated@@263 $generated@@145 $generated@@145) $generated@@491)) $generated@@491) ($generated@@132 ($generated@@336 ($generated@@263 $generated@@145 $generated@@145) $generated@@491) ($generated@@364 $generated@@492 $generated@@493))))
 :pattern ( ($generated@@212 $generated@@491 ($generated@@364 $generated@@492 $generated@@493)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) $generated@@64)) ($generated@@212 $generated@@494 ($generated@@372 $generated@@495 $generated@@496))) (and (= ($generated@@250 ($generated@@336 ($generated@@281 $generated@@145 $generated@@145) $generated@@494)) $generated@@494) ($generated@@132 ($generated@@336 ($generated@@281 $generated@@145 $generated@@145) $generated@@494) ($generated@@372 $generated@@495 $generated@@496))))
 :pattern ( ($generated@@212 $generated@@494 ($generated@@372 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (and (= (type $generated@@497) $generated@@64) (= (type $generated@@498) $generated@@64)) (= (type $generated@@499) $generated@@145)) ($generated@@212 $generated@@499 ($generated@@135 $generated@@497 $generated@@498))) (and (= ($generated@@250 ($generated@@336 $generated@@136 $generated@@499)) $generated@@499) ($generated@@132 ($generated@@336 $generated@@136 $generated@@499) ($generated@@135 $generated@@497 $generated@@498))))
 :pattern ( ($generated@@212 $generated@@499 ($generated@@135 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 (type $generated@@500)))
 (not ($generated@@0 ($generated@@81 ($generated@@380 $generated@@501) $generated@@500))))
 :pattern ( (let (($generated@@501 (type $generated@@500)))
($generated@@81 ($generated@@380 $generated@@501) $generated@@500)))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@69)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@504 $generated@@505)) $generated@@62) (= ($generated@@502 ($generated@@135 $generated@@504 $generated@@505)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@136) (= ($generated@@485 ($generated@@250 $generated@@506)) ($generated@@486 $generated@@506)))
 :pattern ( ($generated@@485 ($generated@@250 $generated@@506)))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) ($generated@@212 $generated@@507 ($generated@@75 0))) (and (= ($generated@@250 ($generated@@336 $generated@@2 $generated@@507)) $generated@@507) ($generated@@132 ($generated@@336 ($generated@@76 $generated@@145 $generated@@4) $generated@@507) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@507 ($generated@@75 0)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@508) $generated@@145) (= (type $generated@@509) $generated@@64)) ($generated@@212 $generated@@508 ($generated@@221 $generated@@509))) (and (= ($generated@@250 ($generated@@336 ($generated@@76 $generated@@145 $generated@@4) $generated@@508)) $generated@@508) ($generated@@132 ($generated@@336 ($generated@@76 $generated@@145 $generated@@4) $generated@@508) ($generated@@221 $generated@@509))))
 :pattern ( ($generated@@212 $generated@@508 ($generated@@221 $generated@@509)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@64)) ($generated@@212 $generated@@510 ($generated@@226 $generated@@511))) (and (= ($generated@@250 ($generated@@336 ($generated@@76 $generated@@145 $generated@@4) $generated@@510)) $generated@@510) ($generated@@132 ($generated@@336 ($generated@@76 $generated@@145 $generated@@4) $generated@@510) ($generated@@226 $generated@@511))))
 :pattern ( ($generated@@212 $generated@@510 ($generated@@226 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@512) $generated@@145) (= (type $generated@@513) $generated@@64)) ($generated@@212 $generated@@512 ($generated@@150 $generated@@513))) (and (= ($generated@@250 ($generated@@336 ($generated@@76 $generated@@145 $generated@@2) $generated@@512)) $generated@@512) ($generated@@132 ($generated@@336 ($generated@@76 $generated@@145 $generated@@2) $generated@@512) ($generated@@150 $generated@@513))))
 :pattern ( ($generated@@212 $generated@@512 ($generated@@150 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@64)) ($generated@@212 $generated@@514 ($generated@@444 $generated@@515))) (and (= ($generated@@250 ($generated@@336 ($generated@@445 $generated@@145) $generated@@514)) $generated@@514) ($generated@@132 ($generated@@336 ($generated@@445 $generated@@145) $generated@@514) ($generated@@444 $generated@@515))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@444 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@516 ($generated@@150 $generated@@517) $generated@@518) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@516 $generated@@519)))) ($generated@@238 $generated@@519 $generated@@517 $generated@@518))
 :pattern ( ($generated@@81 $generated@@516 $generated@@519))
))))
 :pattern ( ($generated@@74 $generated@@516 ($generated@@150 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@136) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@522) (and ($generated@@134 $generated@@520) (exists (($generated@@523 T@U) ) (!  (and (= (type $generated@@523) $generated@@64) ($generated@@74 $generated@@520 ($generated@@135 $generated@@521 $generated@@523) $generated@@522))
 :pattern ( ($generated@@74 $generated@@520 ($generated@@135 $generated@@521 $generated@@523) $generated@@522))
))))) ($generated@@238 ($generated@@143 $generated@@520) $generated@@521 $generated@@522))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@520) $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@136) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@526) (and ($generated@@134 $generated@@524) (exists (($generated@@527 T@U) ) (!  (and (= (type $generated@@527) $generated@@64) ($generated@@74 $generated@@524 ($generated@@135 $generated@@527 $generated@@525) $generated@@526))
 :pattern ( ($generated@@74 $generated@@524 ($generated@@135 $generated@@527 $generated@@525) $generated@@526))
))))) ($generated@@238 ($generated@@144 $generated@@524) $generated@@525 $generated@@526))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@524) $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@528) ($generated@@233 $generated@@529)) ($generated@@233 ($generated@@211 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@528) ($generated@@233 $generated@@529)))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@250 ($generated@@8 ($generated@@231 $generated@@530))) ($generated@@233 ($generated@@250 ($generated@@8 $generated@@530))))
 :pattern ( ($generated@@250 ($generated@@8 ($generated@@231 $generated@@530))))
)))
(assert (forall (($generated@@531 T@U) ) (! (= ($generated@@250 ($generated@@233 $generated@@531)) ($generated@@233 ($generated@@250 $generated@@531)))
 :pattern ( ($generated@@250 ($generated@@233 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@533)))
 (=> (and (and (= (type $generated@@532) ($generated@@76 $generated@@535 $generated@@2)) (= (type $generated@@534) $generated@@2)) (<= 0 ($generated $generated@@534))) (= ($generated@@255 ($generated@@82 $generated@@532 $generated@@533 $generated@@534)) (+ (- ($generated@@255 $generated@@532) ($generated ($generated@@81 $generated@@532 $generated@@533))) ($generated $generated@@534)))))
 :pattern ( ($generated@@255 ($generated@@82 $generated@@532 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@537) $generated@@2)) ($generated@@74 $generated@@537 $generated@@46 $generated@@536))
 :pattern ( ($generated@@74 $generated@@537 $generated@@46 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@539) $generated@@3)) ($generated@@74 $generated@@539 $generated@@47 $generated@@538))
 :pattern ( ($generated@@74 $generated@@539 $generated@@47 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@541) $generated@@4)) ($generated@@74 $generated@@541 $generated@@44 $generated@@540))
 :pattern ( ($generated@@74 $generated@@541 $generated@@44 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@543) $generated@@404)) ($generated@@74 $generated@@543 $generated@@45 $generated@@542))
 :pattern ( ($generated@@74 $generated@@543 $generated@@45 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@545) $generated@@145)) ($generated@@74 $generated@@545 $generated@@48 $generated@@544))
 :pattern ( ($generated@@74 $generated@@545 $generated@@48 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) ($generated@@445 $generated@@145)) (= (type $generated@@547) $generated@@64)) (= ($generated@@132 $generated@@546 ($generated@@444 $generated@@547)) (forall (($generated@@548 Int) ) (!  (=> (and (<= 0 $generated@@548) (< $generated@@548 (seq.len $generated@@546))) ($generated@@212 (seq.nth $generated@@546 $generated@@548) $generated@@547))
 :pattern ( (seq.nth $generated@@546 $generated@@548))
))))
 :pattern ( ($generated@@132 $generated@@546 ($generated@@444 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) ($generated@@263 $generated@@145 $generated@@145)) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@64)) ($generated@@132 $generated@@549 ($generated@@364 $generated@@550 $generated@@551))) (and (and ($generated@@132 ($generated@@261 $generated@@549) ($generated@@221 $generated@@550)) ($generated@@132 ($generated@@304 $generated@@549) ($generated@@221 $generated@@551))) ($generated@@132 ($generated@@335 $generated@@549) ($generated@@221 ($generated@@135 $generated@@550 $generated@@551)))))
 :pattern ( ($generated@@132 $generated@@549 ($generated@@364 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) ($generated@@281 $generated@@145 $generated@@145)) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) $generated@@64)) ($generated@@132 $generated@@552 ($generated@@372 $generated@@553 $generated@@554))) (and (and ($generated@@132 ($generated@@279 $generated@@552) ($generated@@226 $generated@@553)) ($generated@@132 ($generated@@315 $generated@@552) ($generated@@226 $generated@@554))) ($generated@@132 ($generated@@346 $generated@@552) ($generated@@226 ($generated@@135 $generated@@553 $generated@@554)))))
 :pattern ( ($generated@@132 $generated@@552 ($generated@@372 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@2) ($generated@@132 $generated@@555 $generated@@46))
 :pattern ( ($generated@@132 $generated@@555 $generated@@46))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@3) ($generated@@132 $generated@@556 $generated@@47))
 :pattern ( ($generated@@132 $generated@@556 $generated@@47))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@4) ($generated@@132 $generated@@557 $generated@@44))
 :pattern ( ($generated@@132 $generated@@557 $generated@@44))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@404) ($generated@@132 $generated@@558 $generated@@45))
 :pattern ( ($generated@@132 $generated@@558 $generated@@45))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@145) ($generated@@132 $generated@@559 $generated@@48))
 :pattern ( ($generated@@132 $generated@@559 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@560 () T@U)
(declare-fun $generated@@561 () T@U)
(declare-fun $generated@@562 () T@U)
(declare-fun $generated@@563 () T@U)
(declare-fun $generated@@564 (T@U) Bool)
(declare-fun $generated@@565 () T@U)
(declare-fun $generated@@566 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@560) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@561) $generated@@77)) (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@563) ($generated@@445 $generated@@145))) (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@446 (type $generated@@567))))
(= (type (seq.++ $generated@@567 $generated@@568)) ($generated@@445 $generated@@569)))
 :pattern ( (seq.++ $generated@@567 $generated@@568))
))) (forall (($generated@@570 T@T) ) (! (= (type ((as seq.empty T@U) $generated@@570)) ($generated@@445 $generated@@570))
 :pattern ( ((as seq.empty T@U) $generated@@570))
))) (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
(= (type (seq.unit $generated@@571)) ($generated@@445 $generated@@572)))
 :pattern ( (seq.unit $generated@@571))
))) (= (type $generated@@565) ($generated@@445 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@573  (=> (and (= $generated@@560 ($generated@@156 $generated@@561 $generated@@562 $generated@@60 false)) (= $generated@@563 ($generated@@233 (seq.++ (seq.++ ((as seq.empty T@U) $generated@@145) (seq.unit ($generated@@250 ($generated@@8 ($generated@@231 1))))) (seq.unit ($generated@@250 ($generated@@8 ($generated@@231 2)))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@231 0)) (< ($generated@@231 0) (seq.len $generated@@563)))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated ($generated@@336 $generated@@2 (seq.nth $generated@@563 ($generated@@231 0)))) ($generated@@231 1)))))))
(let (($generated@@574  (=> (and ($generated@@237 $generated@@562) ($generated@@564 $generated@@562)) (=> (and (and (and ($generated@@132 $generated@@565 ($generated@@444 $generated@@46)) ($generated@@74 $generated@@565 ($generated@@444 $generated@@46) $generated@@562)) true) (and (= 0 $generated@@566) (= (ControlFlow 0 4) 2))) $generated@@573))))
$generated@@574)))
))
; Valid
